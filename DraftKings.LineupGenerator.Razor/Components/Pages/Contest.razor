@page "/contest/{id:int}"

@using BlazorBootstrap
@using Blazored.LocalStorage
@using DraftKings.LineupGenerator.Api.Draftables
@using DraftKings.LineupGenerator.Models.Contests

@inject IContestsClient ContestsClient;
@inject NavigationManager NavigationManager;
@inject ILocalStorageService LocalStorageService;

@if (contest == null)
{
    <Button Color="ButtonColor.Primary" Loading="true" Style="margin:20px" />
}
else
{
    <div class="trash-container">
        <Button @onclick="RemoveContestAsync">
            <Icon Name="IconName.Trash3Fill" Size="IconSize.x3" />
        </Button>
    </div>
    <h3>@contest.ContestDetail.Name</h3>
    <div class="contest-detail">
        <div class="row description">
            <p>@contest.ContestDetail.ContestSummary</p>
        </div>
    </div>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private ContestModel? contest;

    protected override async Task OnParametersSetAsync()
    {
        contest = await ContestsClient.GetAsync(Id, default);
    }

    private async Task RemoveContestAsync()
    {
        var contests = await LocalStorageService.GetItemAsync<Dictionary<int, ContestSearchModel>>(Constants.LocalStorage.Contests);

        contests.Remove(Id);

        await LocalStorageService.SetItemAsync(Constants.LocalStorage.Contests, contests);

        NavigationManager.NavigateTo("/");
    }
}
